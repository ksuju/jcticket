<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org.//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--유저 1명 조회-->
<mapper namespace="UserMapper">
    <select id="select" parameterType="String" resultType="UserDto">
    select user_id,
           user_password,
           user_name,
           user_email,
           user_tel,
           user_address,
           user_nickname,
           user_birth,
           user_gender,
           user_create_at,
           user_update_at,
           user_retire_yn,
           user_visit_cnt,
           user_interested_genre,
           user_rmark,
           created_at,
           created_id,
           updated_at,
           updated_id
    from user
    where user_id = #{user_id}
    </select>

    <select id="selectImg" resultType="Map">
        select
            pimg.play_poster_stored_file_name as img_name ,
            pimg.play_slide_stored_file_name as slide_img_name ,
            p.play_name as play_name ,
            p.play_id as play_id ,
            CONCAT(DATE_FORMAT(s.showing_start_at, '%Y-%m-%d') , ' ~ ', DATE_FORMAT(s.showing_end_at, '%Y-%m-%d')) as showing_period_date ,
            s.showing_date ,
            DATEDIFF(s.showing_date, CURDATE()) as dday
        from
            play p
                left join play_image pimg on p.play_id = pimg.play_id
                left join
            (
                SELECT
                    s1.play_id,
                    min(s1.showing_date) showing_date,
                    s1.showing_start_at showing_start_at,
                    s1.showing_end_at showing_end_at,
                    CONCAT(DATE_FORMAT(s1.showing_start_at, '%Y-%m-%d') , ' ~ ', DATE_FORMAT(s1.showing_end_at, '%Y-%m-%d')) as showing_period_date
                FROM
                    showing s1
                        left JOIN (
                        SELECT
                            play_id,
                            MIN(showing_date) AS min_showing_date
                        FROM
                            showing
                        GROUP BY
                            play_id
                    ) s2 on s1.play_id = s2.play_id
                group by
                    s1.play_id, s1.showing_start_at, s1.showing_end_at, showing_period_date
            ) s on p.play_id = s.play_id
        where
            1=1
          and s.showing_period_date is not null
        group by
            p.play_id  ,img_name,slide_img_name, p.play_name, showing_period_date, showing_start_at, showing_end_at, dday
        order by
            slide_img_name
    </select>

<!--방문 횟수 카운팅-->
    <update id="increase_visit_cnt" parameterType="String">
        update user
        set user_visit_cnt = user_visit_cnt + 1
        where user_id = #{user_id}
    </update>

    <!--user insert-->
    <insert id="insert" parameterType="UserDto">
        INSERT INTO `user`
        (`user_id`,
         `user_password`,
         `user_name`,
         `user_email`,
         `user_tel`,
         `user_address`,
         `user_nickname`,
         `user_birth`,
         `user_gender`,
         `user_create_at`,
         `user_retire_yn`,
         `user_visit_cnt`,
         `user_interested_genre`,
         `created_at`,
         `created_id`,
         `updated_at`,
         `updated_id`)
        values
            (#{user_id},
             #{user_password},
             #{user_name},
             #{user_email},
             #{user_tel},
             #{user_address},
             #{user_nickname},
             #{user_birth},
             #{user_gender},
             current_timestamp,
             "N",
             0,
             #{user_interested_genre},
             current_timestamp,
             "system",
             current_timestamp,
             "system")
    </insert>

    <insert id="signupSNS" parameterType="UserDto">
        insert into user
        (user_id,
         user_password,
         user_name,
         user_email,
         user_tel,
         user_address,
         user_nickname,
         user_birth,
         user_gender,
         user_create_at,
         user_retire_yn,
         user_visit_cnt,
         user_interested_genre,
         user_sns_provider,
         created_at,
         created_id,
         updated_at,
         updated_id)
        values
            (#{user_id},
             "",
             #{user_name},
             #{user_email},
             #{user_tel},
             #{user_address},
             #{user_nickname},
             #{user_birth},
             #{user_gender},
             current_timestamp,
             "N",
             0,
             #{user_interested_genre},
             #{user_sns_provider},
             current_timestamp,
             "system",
             current_timestamp,
             "system")
    </insert>

    <!-- 아이디 중복체크   -->
    <select id="chkIdDupl" parameterType="String" resultType="int">
        select count(*)
        from user
        where user_id = #{user_id}
    </select>

    <!-- 닉네임 중복체크-->
    <select id="chk_NickName_Dupl" parameterType="String" resultType="int">
        select count(*)
        from user
        where user_nickname = #{user_nickname}
    </select>

    <select id="chk_Email_Dupl" parameterType="String" resultType="int">
        select count(*)
        from user
        where user_email = #{user_email}
    </select>




    <delete id="delete" parameterType="String">
        delete from
            user
        where
            user_id = #{user_id}
    </delete>


    <update id="update" parameterType="UserDto">
        update user
        set
            user_password = #{user_password},
            user_name = #{user_name},
            user_email = #{user_email},
            user_tel = #{user_tel},
            user_address = #{user_address},
            user_nickname = #{user_nickname},
            user_birth = #{user_birth},
            user_gender = #{user_gender},
            user_create_at = #{user_create_at},
            user_update_at = #{user_update_at},
            user_retire_yn = #{user_retire_yn},
            user_visit_cnt = #{user_visit_cnt},
            user_interested_genre = #{user_interested_genre},
            user_rmark = #{user_rmark},
            created_at = #{created_at},
            created_id = #{created_id},
            updated_at = #{updated_at},
            updated_id = #{updated_id}
        where user_id = #{user_id}
    </update>


    <delete id="deleteAll">
        delete from user
    </delete>

    <select id="count" resultType="int">
        select count(*) from user
    </select>
</mapper>